// File: service.proto
syntax = "proto3";

package lume.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "lume/v1/lume.proto";

option go_package = "github.com/mcdev12/lumo/go/internal/genproto/lume/v1;lumev1";

// Service for managing Lume entities (nodes)
service LumeService {
  rpc CreateLume(CreateLumeRequest) returns (CreateLumeResponse);
  rpc GetLume(GetLumeRequest) returns (GetLumeResponse);
  rpc ListLumes(ListLumesRequest) returns (ListLumesResponse);
  rpc UpdateLume(UpdateLumeRequest) returns (UpdateLumeResponse);
  rpc DeleteLume(DeleteLumeRequest) returns (DeleteLumeResponse);
}

// Request to create a new Lume
message CreateLumeRequest {
  string lumo_id = 1 [
    (buf.validate.field).string.uuid = true
  ];

  LumeType type = 2 [
    (buf.validate.field).enum = {not_in: [0]},
    (buf.validate.field).enum.defined_only = true
  ];

  string name = 3 [
    (buf.validate.field).ignore = IGNORE_IF_DEFAULT_VALUE,
    (buf.validate.field).string.min_len = 1
  ];

  google.protobuf.Timestamp date_start = 4;
  google.protobuf.Timestamp date_end = 5;

  double latitude = 6 [
    (buf.validate.field).double.gte = -90,
    (buf.validate.field).double.lte = 90
  ];

  double longitude = 7 [
    (buf.validate.field).double.gte = -180,
    (buf.validate.field).double.lte = 180
  ]
  ;
  string address = 8;

  string description = 9;

  repeated string images = 10;

  repeated string category_tags = 11;

  string booking_link = 12 [
    (buf.validate.field).ignore = IGNORE_IF_DEFAULT_VALUE,
    (buf.validate.field).string.uri = true
  ];
}

// Response after creating a Lume
message CreateLumeResponse {
  Lume lume = 1;
}

// Request to fetch one Lume by lume_id (UUID)
message GetLumeRequest {
  string lume_id = 1;
}

// Response containing a single Lume
message GetLumeResponse {
  Lume lume = 1;
}

// Request to fetch Lumes by user
message ListLumesRequest {
  // UUID of the user
  string user_id = 1;

  // Optional filter by type
  LumeType type = 2;

  // Pagination fields
  int32 page_size = 3;
  string page_token = 4;
}

// Response containing a list of Lumes
message ListLumesResponse {
  repeated Lume lumes = 1;
  string next_page_token = 2;
}

// Request to update an existing Lume
message UpdateLumeRequest {
  Lume lume = 1;
}

// Response after updating a Lume
message UpdateLumeResponse {
  Lume lume = 1;
}

// Request to delete a Lume
message DeleteLumeRequest {
  string lume_id = 1;
}

// Response after deletion
message DeleteLumeResponse {}